version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 'root'        # Setting the root password
      MYSQL_DATABASE: foyer            # This database will be created automatically
    ports:
      - "3306:3306"
    networks:
      - my_network
    volumes:
      - mysql-data:/var/lib/mysql      # Persist MySQL data
    restart: always

  springboot:
    image: jawhertouil/jawhertouil-bugbusters-4twin4-foyer
    container_name: springboot
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/foyer?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 'root'
    ports:
      - "8089:8089"
    depends_on:
      - mysql
    networks:
      - my_network
    restart: always

  sonarqube:
    image: sonarqube:latest
    environment:
      SONARQUBE_JDBC_URL: jdbc:mysql://mysql:3306/sonar  # Ensure the 'sonar' database is available
      SONARQUBE_JDBC_USERNAME: sonar
      SONARQUBE_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    networks:
      - my_network
    volumes:
      - sonar-data:/opt/sonarqube/data
      - sonar-logs:/opt/sonarqube/logs
      - sonar-extensions:/opt/sonarqube/extensions
    restart: always

  nexus:
    image: sonatype/nexus3
    ports:
      - "8081:8081"
    networks:
      - my_network
    volumes:
      - nexus-data:/nexus-data  # Persist Nexus data
    restart: always

  prometheus:
    image: prom/prometheus
    restart: always
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - my_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3100:3000"  # Grafana on port 3100
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"  # Set your desired password here
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - my_network
    restart: always

networks:
  my_network:
    driver: bridge

volumes:
  mysql-data:  # Volume for MySQL
  sonar-data:  # Volume for SonarQube data
  sonar-logs:  # Volume for SonarQube logs
  sonar-extensions:  # Volume for SonarQube extensions
  nexus-data:  # Volume for Nexus data
  prometheus-data:  # Volume for Prometheus data
  grafana-data:  # Volume for Grafana data
